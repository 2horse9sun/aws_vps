Parameters:
  VPCCIDR:
    Description: The CIDR of the VPC being created.
    Type: String
    Default: 10.233.0.0/16
  VPSSubnetCIDR:
    Description: The CIDR of the VPS subnet being created.
    Type: String
    Default: 10.233.0.0/20
  VPCName:
    Description: The name of the VPC being created.
    Type: String
    Default: vps-vpc
  VPSSubnetName:
    Description: The Name of the VPS subnet being created.
    Type: String
    Default: vps-subnet
  VPSKeyName:
    Default: vps
    Type: String
  SNSTopicName:
    Default: vps-topic
    Type: String
  SNSSubsciptionEmail:
    Type: String

Resources:
### VPC and subnets ###############################################################################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      Tags:
        -
          Key: Name
          Value: !Ref VPCName
  VPSSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
        Fn::Sub:
          - "${AWS::Region}${AZ}"
          - AZ: a
      CidrBlock: !Ref VPSSubnetCIDR
      Tags:
        -
          Key: Name
          Value: !Ref VPSSubnetName

### Internet Gateway ###############################################################################
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        -
          Key: Name
          Value: !Join
            - ''
            - - !Ref VPCName
              - '-IGW'
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

### Public Route ###############################################################################
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        -
          Key: Name
          Value: !Join
            - ''
            - - !Ref VPCName
              - '-public-route-table'
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref VPSSubnet
      RouteTableId: !Ref PublicRouteTable

### Public Network ACLs ###############################################################################
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        -
          Key: Name
          Value: !Join
            - ''
            - - !Ref VPCName
              - '-public-nacl'
  InboundHTTPPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  OutboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  PublicSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref VPSSubnet
      NetworkAclId: !Ref PublicNetworkAcl

### Security Groups ###############################################################################
  VPSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: vps-sg
      GroupDescription: Allow all
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

### Roles ###############################################################################
  VPSRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
  VPSInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref VPSRole

  VPSKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: !Ref VPSKeyName

### SNS ###############################################################################
  SNSTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: !Ref SNSTopicName

  SNSTopicSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Protocol: 'email'
      TopicArn: !Ref SNSTopic
      Endpoint: !Ref SNSSubsciptionEmail

Outputs:
  VPSSubnetId:
    Value: !Ref VPSSubnet
    Export:
      Name: VPSSubnetId
  VPSSecurityGroupId:
    Value: !Ref VPSSecurityGroup
    Export:
      Name: VPSSecurityGroupId
  VPSInstanceProfileName:
    Value: !Ref VPSInstanceProfile
    Export:
      Name: VPSInstanceProfileName
  VPSKeyName:
    Value: !Ref VPSKeyPair
    Export:
      Name: VPSKeyName
  SNSTopicArn:
    Value: !Ref SNSTopic
    Export:
      Name: SNSTopicArn